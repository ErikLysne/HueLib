<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="" version="" project="">
    <namespace threadsafety="unspecified" name="" status="active" access="public">
        <class threadsafety="unspecified" name="AbstractTreeModel" href="abstracttreemodel.html" status="internal" access="private" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="10">
            <function threadsafety="unspecified" name="AbstractTreeModel" fullname="AbstractTreeModel::AbstractTreeModel" href="abstracttreemodel.html#AbstractTreeModel" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AbstractTreeModel(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="getRootItem" fullname="AbstractTreeModel::getRootItem" href="abstracttreemodel.html#getRootItem" status="active" access="protected" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TreeItem *" signature="TreeItem * getRootItem()"/>
            <function threadsafety="unspecified" name="setRootItem" fullname="AbstractTreeModel::setRootItem" href="abstracttreemodel.html#setRootItem" status="active" access="protected" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="27" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setRootItem(TreeItem *rootItem)">
                <parameter left="TreeItem *" right="" name="rootItem" default=""/>
            </function>
            <function threadsafety="unspecified" name="setupModelData" fullname="AbstractTreeModel::setupModelData" href="abstracttreemodel.html#setupModelData" status="active" access="private" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="32" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setupModelData(TreeItem *rootItem) = 0">
                <parameter left="TreeItem *" right="" name="rootItem" default=""/>
            </function>
            <function threadsafety="unspecified" name="~AbstractTreeModel" fullname="AbstractTreeModel::~AbstractTreeModel" href="abstracttreemodel.html#dtor.AbstractTreeModel" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="15" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="" signature="~AbstractTreeModel() override"/>
            <function threadsafety="unspecified" name="index" fullname="AbstractTreeModel::index" href="abstracttreemodel.html#index" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="17" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QModelIndex" signature="QModelIndex index(int row, int column, const QModelIndex &amp;parent) const override">
                <parameter left="int" right="" name="row" default=""/>
                <parameter left="int" right="" name="column" default=""/>
                <parameter left="const QModelIndex &amp;" right="" name="parent" default=""/>
            </function>
            <function threadsafety="unspecified" name="parent" fullname="AbstractTreeModel::parent" href="abstracttreemodel.html#parent" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="18" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QModelIndex" signature="QModelIndex parent(const QModelIndex &amp;index) const override">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
            </function>
            <function threadsafety="unspecified" name="data" fullname="AbstractTreeModel::data" href="abstracttreemodel.html#data" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function threadsafety="unspecified" name="headerData" fullname="AbstractTreeModel::headerData" href="abstracttreemodel.html#headerData" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="24" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant headerData(int section, Qt::Orientation orientation, int role) const override">
                <parameter left="int" right="" name="section" default=""/>
                <parameter left="Qt::Orientation" right="" name="orientation" default=""/>
                <parameter left="int" right="" name="role" default=""/>
            </function>
            <function threadsafety="unspecified" name="flags" fullname="AbstractTreeModel::flags" href="abstracttreemodel.html#flags" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="Qt::ItemFlags" signature="Qt::ItemFlags flags(const QModelIndex &amp;index) const override">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
            </function>
            <function threadsafety="unspecified" name="columnCount" fullname="AbstractTreeModel::columnCount" href="abstracttreemodel.html#columnCount" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="int" signature="int columnCount(const QModelIndex &amp;parent) const override">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
            <function threadsafety="unspecified" name="rowCount" fullname="AbstractTreeModel::rowCount" href="abstracttreemodel.html#rowCount" status="active" access="public" location="abstracttreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/abstracttreemodel.h" lineno="19" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="int" signature="int rowCount(const QModelIndex &amp;parent) const override">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
        </class>
        <class threadsafety="unspecified" name="HueGroupInfoTreeModel" href="huegroupinfotreemodel.html" status="internal" access="private" location="huegroupinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegroupinfotreemodel.h" lineno="8" bases="AbstractTreeModel">
            <function threadsafety="unspecified" name="HueGroupInfoTreeModel" fullname="HueGroupInfoTreeModel::HueGroupInfoTreeModel" href="huegroupinfotreemodel.html#HueGroupInfoTreeModel" status="active" access="public" location="huegroupinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegroupinfotreemodel.h" lineno="12" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueGroupInfoTreeModel(std::shared_ptr&lt;HueGroup&gt; group, QObject *parent)">
                <parameter left="std::shared_ptr&lt;HueGroup&gt;" right="" name="group" default=""/>
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="setupModelData" fullname="HueGroupInfoTreeModel::setupModelData" href="huegroupinfotreemodel.html#setupModelData" status="active" access="private" location="huegroupinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegroupinfotreemodel.h" lineno="19" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void setupModelData(TreeItem *rootItem) override">
                <parameter left="TreeItem *" right="" name="rootItem" default=""/>
            </function>
            <function threadsafety="unspecified" name="update" fullname="HueGroupInfoTreeModel::update" href="huegroupinfotreemodel.html#update" status="active" access="public" location="huegroupinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegroupinfotreemodel.h" lineno="16" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void update()"/>
            <function threadsafety="unspecified" name="~HueGroupInfoTreeModel" fullname="HueGroupInfoTreeModel::~HueGroupInfoTreeModel" href="huegroupinfotreemodel.html#dtor.HueGroupInfoTreeModel" status="active" access="public" location="huegroupinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegroupinfotreemodel.h" lineno="13" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="" signature="~HueGroupInfoTreeModel() override"/>
        </class>
        <class threadsafety="unspecified" name="HueGroupListModel" href="huegrouplistmodel.html" status="internal" access="private" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="8">
            <function threadsafety="unspecified" name="HueGroupListModel" fullname="HueGroupListModel::HueGroupListModel" href="huegrouplistmodel.html#HueGroupListModel" status="active" access="public" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="12" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueGroupListModel(std::shared_ptr&lt;HueGroupList&gt; group, QObject *parent)">
                <parameter left="std::shared_ptr&lt;HueGroupList&gt;" right="" name="group" default=""/>
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="~HueGroupListModel" fullname="HueGroupListModel::~HueGroupListModel" href="huegrouplistmodel.html#dtor.HueGroupListModel" status="active" access="public" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="13" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="" signature="~HueGroupListModel() override"/>
            <function threadsafety="unspecified" name="data" fullname="HueGroupListModel::data" href="huegrouplistmodel.html#data" status="active" access="public" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="17" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function threadsafety="unspecified" name="headerData" fullname="HueGroupListModel::headerData" href="huegrouplistmodel.html#headerData" status="active" access="public" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="18" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant headerData(int section, Qt::Orientation orientation, int role) const override">
                <parameter left="int" right="" name="section" default=""/>
                <parameter left="Qt::Orientation" right="" name="orientation" default=""/>
                <parameter left="int" right="" name="role" default=""/>
            </function>
            <function threadsafety="unspecified" name="rowCount" fullname="HueGroupListModel::rowCount" href="huegrouplistmodel.html#rowCount" status="active" access="public" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="15" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="int" signature="int rowCount(const QModelIndex &amp;parent) const override">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
            <function threadsafety="unspecified" name="getGroup" fullname="HueGroupListModel::getGroup" href="huegrouplistmodel.html#getGroup" status="active" access="public" location="huegrouplistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huegrouplistmodel.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::shared_ptr&lt;HueGroup&gt;" signature="std::shared_ptr&lt;HueGroup&gt; getGroup(const QModelIndex &amp;index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="HueLightInfoTreeModel" href="huelightinfotreemodel.html" status="internal" access="private" location="huelightinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightinfotreemodel.h" lineno="8" bases="AbstractTreeModel">
            <function threadsafety="unspecified" name="HueLightInfoTreeModel" fullname="HueLightInfoTreeModel::HueLightInfoTreeModel" href="huelightinfotreemodel.html#HueLightInfoTreeModel" status="active" access="public" location="huelightinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightinfotreemodel.h" lineno="12" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueLightInfoTreeModel(std::shared_ptr&lt;HueLight&gt; light, QObject *parent)">
                <parameter left="std::shared_ptr&lt;HueLight&gt;" right="" name="light" default=""/>
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="setupModelData" fullname="HueLightInfoTreeModel::setupModelData" href="huelightinfotreemodel.html#setupModelData" status="active" access="private" location="huelightinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightinfotreemodel.h" lineno="19" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void setupModelData(TreeItem *rootItem) override">
                <parameter left="TreeItem *" right="" name="rootItem" default=""/>
            </function>
            <function threadsafety="unspecified" name="update" fullname="HueLightInfoTreeModel::update" href="huelightinfotreemodel.html#update" status="active" access="private" location="huelightinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightinfotreemodel.h" lineno="16" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void update()"/>
            <function threadsafety="unspecified" name="~HueLightInfoTreeModel" fullname="HueLightInfoTreeModel::~HueLightInfoTreeModel" href="huelightinfotreemodel.html#dtor.HueLightInfoTreeModel" status="active" access="public" location="huelightinfotreemodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightinfotreemodel.h" lineno="13" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="" signature="~HueLightInfoTreeModel() override"/>
        </class>
        <class threadsafety="unspecified" name="HueLightListModel" href="huelightlistmodel.html" status="internal" access="private" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="8">
            <function threadsafety="unspecified" name="HueLightListModel" fullname="HueLightListModel::HueLightListModel" href="huelightlistmodel.html#HueLightListModel" status="active" access="public" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="12" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueLightListModel(std::shared_ptr&lt;HueLightList&gt; lightList, QObject *parent)">
                <parameter left="std::shared_ptr&lt;HueLightList&gt;" right="" name="lightList" default=""/>
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="~HueLightListModel" fullname="HueLightListModel::~HueLightListModel" href="huelightlistmodel.html#dtor.HueLightListModel" status="active" access="public" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="13" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="" signature="~HueLightListModel() override"/>
            <function threadsafety="unspecified" name="data" fullname="HueLightListModel::data" href="huelightlistmodel.html#data" status="active" access="public" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="17" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function threadsafety="unspecified" name="headerData" fullname="HueLightListModel::headerData" href="huelightlistmodel.html#headerData" status="active" access="public" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="18" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant headerData(int section, Qt::Orientation orientation, int role) const override">
                <parameter left="int" right="" name="section" default=""/>
                <parameter left="Qt::Orientation" right="" name="orientation" default=""/>
                <parameter left="int" right="" name="role" default=""/>
            </function>
            <function threadsafety="unspecified" name="rowCount" fullname="HueLightListModel::rowCount" href="huelightlistmodel.html#rowCount" status="active" access="public" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="15" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="int" signature="int rowCount(const QModelIndex &amp;parent) const override">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
            <function threadsafety="unspecified" name="getLight" fullname="HueLightListModel::getLight" href="huelightlistmodel.html#getLight" status="active" access="public" location="huelightlistmodel.h" filepath="/home/erik/Dev/huelib/source/Models/huelightlistmodel.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::shared_ptr&lt;HueLight&gt;" signature="std::shared_ptr&lt;HueLight&gt; getLight(const QModelIndex &amp;index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="TreeItem" href="treeitem.html" status="internal" access="private" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="7">
            <function threadsafety="unspecified" name="child" fullname="TreeItem::child" href="treeitem.html#child" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="15" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TreeItem *" signature="TreeItem * child(int row)">
                <parameter left="int" right="" name="row" default=""/>
            </function>
            <function threadsafety="unspecified" name="parentItem" fullname="TreeItem::parentItem" href="treeitem.html#parentItem" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TreeItem *" signature="TreeItem * parentItem()"/>
            <function threadsafety="unspecified" name="TreeItem" fullname="TreeItem::TreeItem" href="treeitem.html#TreeItem" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TreeItem(const QVector&lt;QVariant&gt; &amp;data, TreeItem *parentItem)">
                <parameter left="const QVector&lt;QVariant&gt; &amp;" right="" name="data" default=""/>
                <parameter left="TreeItem *" right="" name="parentItem" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="appendChild" fullname="TreeItem::appendChild" href="treeitem.html#appendChild" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="13" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void appendChild(TreeItem *child)">
                <parameter left="TreeItem *" right="" name="child" default=""/>
            </function>
            <function threadsafety="unspecified" name="~TreeItem" fullname="TreeItem::~TreeItem" href="treeitem.html#dtor.TreeItem" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="11" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~TreeItem()"/>
            <function threadsafety="unspecified" name="data" fullname="TreeItem::data" href="treeitem.html#data" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="18" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVariant" signature="QVariant data(int column) const">
                <parameter left="int" right="" name="column" default=""/>
            </function>
            <function threadsafety="unspecified" name="childCount" fullname="TreeItem::childCount" href="treeitem.html#childCount" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="16" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int childCount() const"/>
            <function threadsafety="unspecified" name="columnCount" fullname="TreeItem::columnCount" href="treeitem.html#columnCount" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="17" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int columnCount() const"/>
            <function threadsafety="unspecified" name="row" fullname="TreeItem::row" href="treeitem.html#row" status="active" access="public" location="treeitem.h" filepath="/home/erik/Dev/huelib/source/Models/treeitem.h" lineno="19" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int row() const"/>
        </class>
        <class threadsafety="unspecified" name="HueAbstractObject" href="hueabstractobject.html" status="internal" access="private" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="12">
            <function threadsafety="unspecified" name="HueAbstractObject" fullname="HueAbstractObject::HueAbstractObject" href="hueabstractobject.html#HueAbstractObject" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="27" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueAbstractObject(HueBridge *bridge)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
            </function>
            <enum threadsafety="unspecified" name="HueEffect" fullname="HueAbstractObject::HueEffect" href="hueabstractobject.html#HueEffect-enum" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="23">
                <value name="NoEffect" value="0"/>
                <value name="ColorLoop" value="1"/>
            </enum>
            <function threadsafety="unspecified" name="makeGetRequest" fullname="HueAbstractObject::makeGetRequest" href="hueabstractobject.html#makeGetRequest" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="57" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueRequest" signature="HueRequest makeGetRequest() = 0"/>
            <function threadsafety="unspecified" name="makePutRequest" fullname="HueAbstractObject::makePutRequest" href="hueabstractobject.html#makePutRequest" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="56" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueRequest" signature="HueRequest makePutRequest(QJsonObject json) = 0">
                <parameter left="QJsonObject" right="" name="json" default=""/>
            </function>
            <function threadsafety="unspecified" name="parseJson" fullname="HueAbstractObject::parseJson" href="hueabstractobject.html#parseJson" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="51" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QMap&lt;int, QJsonObject&gt;" signature="QMap&lt;int, QJsonObject&gt; parseJson(QJsonObject json)">
                <parameter left="QJsonObject" right="" name="json" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendRequest" fullname="HueAbstractObject::sendRequest" href="hueabstractobject.html#sendRequest" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool sendRequest(HueRequest request)">
                <parameter left="HueRequest" right="" name="request" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendRequest" fullname="HueAbstractObject::sendRequest" href="hueabstractobject.html#sendRequest-1" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="54" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool sendRequest(HueRequest request, HueReply &amp;reply)">
                <parameter left="HueRequest" right="" name="request" default=""/>
                <parameter left="HueReply &amp;" right="" name="reply" default=""/>
            </function>
            <function threadsafety="unspecified" name="setAlert" fullname="HueAbstractObject::setAlert" href="hueabstractobject.html#setAlert" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="37" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setAlert(const HueAlert alert)">
                <parameter left="const HueAlert" right="" name="alert" default=""/>
            </function>
            <function threadsafety="unspecified" name="setBrightness" fullname="HueAbstractObject::setBrightness" href="hueabstractobject.html#setBrightness" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setBrightness(const int brightness)">
                <parameter left="const int" right="" name="brightness" default=""/>
            </function>
            <function threadsafety="unspecified" name="setColorTemp" fullname="HueAbstractObject::setColorTemp" href="hueabstractobject.html#setColorTemp" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setColorTemp(const int colorTemp)">
                <parameter left="const int" right="" name="colorTemp" default=""/>
            </function>
            <function threadsafety="unspecified" name="setEffect" fullname="HueAbstractObject::setEffect" href="hueabstractobject.html#setEffect" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setEffect(const HueEffect effect)">
                <parameter left="const HueEffect" right="" name="effect" default=""/>
            </function>
            <function threadsafety="unspecified" name="setHue" fullname="HueAbstractObject::setHue" href="hueabstractobject.html#setHue" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="32" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setHue(const int hue)">
                <parameter left="const int" right="" name="hue" default=""/>
            </function>
            <function threadsafety="unspecified" name="setSaturation" fullname="HueAbstractObject::setSaturation" href="hueabstractobject.html#setSaturation" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="33" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setSaturation(const int saturation)">
                <parameter left="const int" right="" name="saturation" default=""/>
            </function>
            <function threadsafety="unspecified" name="setXY" fullname="HueAbstractObject::setXY" href="hueabstractobject.html#setXY" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setXY(const double x, const double y)">
                <parameter left="const double" right="" name="x" default=""/>
                <parameter left="const double" right="" name="y" default=""/>
            </function>
            <enum threadsafety="unspecified" name="HueAlert" fullname="HueAbstractObject::HueAlert" href="hueabstractobject.html#HueAlert-enum" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="18">
                <value name="NoAlert" value="0"/>
                <value name="BreatheSingle" value="1"/>
                <value name="Breathe15Sec" value="2"/>
            </enum>
            <function threadsafety="unspecified" name="synchronize" fullname="HueAbstractObject::synchronize" href="hueabstractobject.html#synchronize" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="45" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool synchronize() = 0"/>
            <function threadsafety="unspecified" name="turnOff" fullname="HueAbstractObject::turnOff" href="hueabstractobject.html#turnOff" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="31" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool turnOff(const bool off)">
                <parameter left="const bool" right="" name="off" default="true"/>
            </function>
            <function threadsafety="unspecified" name="turnOn" fullname="HueAbstractObject::turnOn" href="hueabstractobject.html#turnOn" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="30" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool turnOn(const bool on)">
                <parameter left="const bool" right="" name="on" default="true"/>
            </function>
            <function threadsafety="unspecified" name="enablePeriodicSync" fullname="HueAbstractObject::enablePeriodicSync" href="hueabstractobject.html#enablePeriodicSync" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void enablePeriodicSync(const bool periodicSyncOn)">
                <parameter left="const bool" right="" name="periodicSyncOn" default="true"/>
            </function>
            <function threadsafety="unspecified" name="setBridge" fullname="HueAbstractObject::setBridge" href="hueabstractobject.html#setBridge" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setBridge(HueBridge *bridge)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
            </function>
            <function threadsafety="unspecified" name="synchronized" fullname="HueAbstractObject::synchronized" href="hueabstractobject.html#synchronized" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="69" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void synchronized()"/>
            <function threadsafety="unspecified" name="updateAlert" fullname="HueAbstractObject::updateAlert" href="hueabstractobject.html#updateAlert" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="65" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateAlert(const HueAlert alert) = 0">
                <parameter left="const HueAlert" right="" name="alert" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateBrightness" fullname="HueAbstractObject::updateBrightness" href="hueabstractobject.html#updateBrightness" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="62" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateBrightness(const int brightness) = 0">
                <parameter left="const int" right="" name="brightness" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateColorTemp" fullname="HueAbstractObject::updateColorTemp" href="hueabstractobject.html#updateColorTemp" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="63" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateColorTemp(const int colorTemp) = 0">
                <parameter left="const int" right="" name="colorTemp" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateEffect" fullname="HueAbstractObject::updateEffect" href="hueabstractobject.html#updateEffect" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="66" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateEffect(const HueEffect effect) = 0">
                <parameter left="const HueEffect" right="" name="effect" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateHue" fullname="HueAbstractObject::updateHue" href="hueabstractobject.html#updateHue" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="60" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateHue(const int hue) = 0">
                <parameter left="const int" right="" name="hue" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateOn" fullname="HueAbstractObject::updateOn" href="hueabstractobject.html#updateOn" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="59" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateOn(const bool on) = 0">
                <parameter left="const bool" right="" name="on" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateSaturation" fullname="HueAbstractObject::updateSaturation" href="hueabstractobject.html#updateSaturation" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="61" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateSaturation(const int saturation) = 0">
                <parameter left="const int" right="" name="saturation" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateXY" fullname="HueAbstractObject::updateXY" href="hueabstractobject.html#updateXY" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="64" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateXY(const double x, const double y) = 0">
                <parameter left="const double" right="" name="x" default=""/>
                <parameter left="const double" right="" name="y" default=""/>
            </function>
            <function threadsafety="unspecified" name="valueUpdated" fullname="HueAbstractObject::valueUpdated" href="hueabstractobject.html#valueUpdated" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="70" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void valueUpdated()"/>
            <function threadsafety="unspecified" name="~HueAbstractObject" fullname="HueAbstractObject::~HueAbstractObject" href="hueabstractobject.html#dtor.HueAbstractObject" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="28" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HueAbstractObject()"/>
            <function threadsafety="unspecified" name="getBridge" fullname="HueAbstractObject::getBridge" href="hueabstractobject.html#getBridge" status="active" access="protected" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="49" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueBridge *" signature="HueBridge * getBridge() const"/>
            <function threadsafety="unspecified" name="hasValidConstructor" fullname="HueAbstractObject::hasValidConstructor" href="hueabstractobject.html#hasValidConstructor" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="42" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool hasValidConstructor() const = 0"/>
            <function threadsafety="unspecified" name="isValid" fullname="HueAbstractObject::isValid" href="hueabstractobject.html#isValid" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="43" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const = 0"/>
            <function threadsafety="unspecified" name="ID" fullname="HueAbstractObject::ID" href="hueabstractobject.html#ID" status="active" access="public" location="hueabstractobject.h" filepath="/home/erik/Dev/huelib/source/hueabstractobject.h" lineno="44" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int ID() const = 0"/>
        </class>
        <class threadsafety="unspecified" name="HueBridge" href="huebridge.html" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="14" groups="HueLib" brief="Represents the physical bridge connected to the network">
            <function threadsafety="unspecified" name="HueBridge" fullname="HueBridge::HueBridge" href="huebridge.html#HueBridge" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="26" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueBridge(QString ip, QString username, QNetworkAccessManager *nam, QObject *parent)">
                <parameter left="QString" right="" name="ip" default=""/>
                <parameter left="QString" right="" name="username" default="&quot;&quot;"/>
                <parameter left="QNetworkAccessManager *" right="" name="nam" default="new QNetworkAccessManager()"/>
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="sendRequest" fullname="HueBridge::sendRequest" href="huebridge.html#sendRequest" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueReply" signature="HueReply sendRequest(const HueRequest request, HueAbstractObject *senderObject)">
                <parameter left="const HueRequest" right="" name="request" default=""/>
                <parameter left="HueAbstractObject *" right="" name="senderObject" default=""/>
            </function>
            <function threadsafety="unspecified" name="createNewUser" fullname="HueBridge::createNewUser" href="huebridge.html#createNewUser" status="active" access="private" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString createNewUser(QString name, HueReply reply)">
                <parameter left="QString" right="" name="name" default=""/>
                <parameter left="HueReply" right="" name="reply" default=""/>
            </function>
            <function threadsafety="unspecified" name="link" fullname="HueBridge::link" href="huebridge.html#link" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="31" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString link(QString appName, QString deviceName)">
                <parameter left="QString" right="" name="appName" default="&quot;C++ HueLib app&quot;"/>
                <parameter left="QString" right="" name="deviceName" default="&quot;&quot;"/>
            </function>
            <function threadsafety="unspecified" name="testConnection" fullname="HueBridge::testConnection" href="huebridge.html#testConnection-1" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="33" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool testConnection()"/>
            <function threadsafety="unspecified" name="testConnection" fullname="HueBridge::testConnection" href="huebridge.html#testConnection" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="32" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool testConnection(ConnectionStatus &amp;status)">
                <parameter left="ConnectionStatus &amp;" right="" name="status" default=""/>
            </function>
            <function threadsafety="unspecified" name="block" fullname="HueBridge::block" href="huebridge.html#block" status="active" access="private" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void block(const int sleepTimeMilliseconds)">
                <parameter left="const int" right="" name="sleepTimeMilliseconds" default=""/>
            </function>
            <function threadsafety="unspecified" name="evaluateReply" fullname="HueBridge::evaluateReply" href="huebridge.html#evaluateReply" status="active" access="private" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="50" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void evaluateReply(QNetworkReply *networkReply, HueReply &amp;reply)">
                <parameter left="QNetworkReply *" right="" name="networkReply" default=""/>
                <parameter left="HueReply &amp;" right="" name="reply" default=""/>
            </function>
            <function threadsafety="unspecified" name="setBridgeCommandBlockTime" fullname="HueBridge::setBridgeCommandBlockTime" href="huebridge.html#setBridgeCommandBlockTime" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setBridgeCommandBlockTime(const int milliseconds)">
                <parameter left="const int" right="" name="milliseconds" default=""/>
            </function>
            <function threadsafety="unspecified" name="setGroupCommandBlockTime" fullname="HueBridge::setGroupCommandBlockTime" href="huebridge.html#setGroupCommandBlockTime" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setGroupCommandBlockTime(const int milliseconds)">
                <parameter left="const int" right="" name="milliseconds" default=""/>
            </function>
            <function threadsafety="unspecified" name="setLightCommandBlockTime" fullname="HueBridge::setLightCommandBlockTime" href="huebridge.html#setLightCommandBlockTime" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLightCommandBlockTime(const int milliseconds)">
                <parameter left="const int" right="" name="milliseconds" default=""/>
            </function>
            <function threadsafety="unspecified" name="setNetworkAccessManager" fullname="HueBridge::setNetworkAccessManager" href="huebridge.html#setNetworkAccessManager" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setNetworkAccessManager(QNetworkAccessManager *nam)">
                <parameter left="QNetworkAccessManager *" right="" name="nam" default=""/>
            </function>
            <function threadsafety="unspecified" name="setNetworkRequestTimeout" fullname="HueBridge::setNetworkRequestTimeout" href="huebridge.html#setNetworkRequestTimeout" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setNetworkRequestTimeout(const int milliseconds)">
                <parameter left="const int" right="" name="milliseconds" default=""/>
            </function>
            <function threadsafety="unspecified" name="~HueBridge" fullname="HueBridge::~HueBridge" href="huebridge.html#dtor.HueBridge" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="29" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HueBridge()"/>
            <function threadsafety="unspecified" name="getLastError" fullname="HueBridge::getLastError" href="huebridge.html#getLastError" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="38" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueError" signature="HueError getLastError() const"/>
            <function threadsafety="unspecified" name="getLastReply" fullname="HueBridge::getLastReply" href="huebridge.html#getLastReply" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="37" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueReply" signature="HueReply getLastReply() const"/>
            <function threadsafety="unspecified" name="getIP" fullname="HueBridge::getIP" href="huebridge.html#getIP" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="35" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getIP() const"/>
            <function threadsafety="unspecified" name="getUsername" fullname="HueBridge::getUsername" href="huebridge.html#getUsername" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="36" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getUsername() const"/>
            <enum threadsafety="unspecified" name="ConnectionStatus" fullname="HueBridge::ConnectionStatus" href="huebridge.html#ConnectionStatus-enum" status="active" access="public" location="huebridge.h" filepath="/home/erik/Dev/huelib/source/huebridge.h" lineno="18">
                <value name="Success" value="0"/>
                <value name="TimedOut" value="1"/>
                <value name="JsonError" value="2"/>
                <value name="HttpError" value="3"/>
                <value name="Unknown" value="4"/>
            </enum>
        </class>
        <class threadsafety="unspecified" name="HueError" href="hueerror.html" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="6" groups="HueLib" brief="Contains the details of an error received from HueBridge::sendRequest()">
            <function threadsafety="unspecified" name="operator=" fullname="HueError::operator=" href="hueerror.html#operator-eq" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="12" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueError" signature="HueError operator=(const HueError &amp;rhs)">
                <parameter left="const HueError &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueError" fullname="HueError::HueError" href="hueerror.html#HueError" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="9" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueError()"/>
            <function threadsafety="unspecified" name="HueError" fullname="HueError::HueError" href="hueerror.html#HueError-2" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="11" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueError(const HueError &amp;rhs)">
                <parameter left="const HueError &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueError" fullname="HueError::HueError" href="hueerror.html#HueError-1" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueError(int type, QString address, QString description)">
                <parameter left="int" right="" name="type" default=""/>
                <parameter left="QString" right="" name="address" default=""/>
                <parameter left="QString" right="" name="description" default=""/>
            </function>
            <function threadsafety="unspecified" name="setAddress" fullname="HueError::setAddress" href="hueerror.html#setAddress" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAddress(const QString address)">
                <parameter left="const QString" right="" name="address" default=""/>
            </function>
            <function threadsafety="unspecified" name="setDescription" fullname="HueError::setDescription" href="hueerror.html#setDescription" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDescription(const QString description)">
                <parameter left="const QString" right="" name="description" default=""/>
            </function>
            <function threadsafety="unspecified" name="setType" fullname="HueError::setType" href="hueerror.html#setType" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="18" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setType(const int type)">
                <parameter left="const int" right="" name="type" default=""/>
            </function>
            <function threadsafety="unspecified" name="getAddress" fullname="HueError::getAddress" href="hueerror.html#getAddress" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="15" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getAddress() const"/>
            <function threadsafety="unspecified" name="getDescription" fullname="HueError::getDescription" href="hueerror.html#getDescription" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="16" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getDescription() const"/>
            <function threadsafety="unspecified" name="getType" fullname="HueError::getType" href="hueerror.html#getType" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="14" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getType() const"/>
            <function threadsafety="unspecified" name="operator QString" fullname="HueError::operator QString" href="hueerror.html#operator-QString" status="active" access="public" location="hueerror.h" filepath="/home/erik/Dev/huelib/source/hueerror.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator QString() const"/>
        </class>
        <class threadsafety="unspecified" name="HueGroup" href="huegroup.html" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="10" bases="HueAbstractObject" groups="HueLib" brief="HueLight class is used to interface with a group of Hue lights">
            <function threadsafety="unspecified" name="operator=" fullname="HueGroup::operator=" href="huegroup.html#operator-eq" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="44" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueGroup" signature="HueGroup operator=(const HueGroup &amp;rhs)">
                <parameter left="const HueGroup &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueGroup" fullname="HueGroup::HueGroup" href="huegroup.html#HueGroup" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueGroup()"/>
            <function threadsafety="unspecified" name="HueGroup" fullname="HueGroup::HueGroup" href="huegroup.html#HueGroup-1" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="15" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueGroup(HueBridge *bridge)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueGroup" fullname="HueGroup::HueGroup" href="huegroup.html#HueGroup-2" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueGroup(HueBridge *bridge, int ID, Group::Action action, Group::Lights lights, Group::Sensors sensors, Group::State state, Group::Name name, Group::Type type, Group::GroupClass classObject, Group::Recycle recycle)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
                <parameter left="int" right="" name="ID" default=""/>
                <parameter left="Group::Action" right="" name="action" default=""/>
                <parameter left="Group::Lights" right="" name="lights" default=""/>
                <parameter left="Group::Sensors" right="" name="sensors" default=""/>
                <parameter left="Group::State" right="" name="state" default=""/>
                <parameter left="Group::Name" right="" name="name" default=""/>
                <parameter left="Group::Type" right="" name="type" default=""/>
                <parameter left="Group::GroupClass" right="" name="classObject" default=""/>
                <parameter left="Group::Recycle" right="" name="recycle" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueGroup" fullname="HueGroup::HueGroup" href="huegroup.html#HueGroup-3" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="43" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueGroup(const HueGroup &amp;rhs)">
                <parameter left="const HueGroup &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="discoverGroups" fullname="HueGroup::discoverGroups" href="huegroup.html#discoverGroups" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="17" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="HueGroupList" signature="HueGroupList discoverGroups(HueBridge *bridge)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
            </function>
            <function threadsafety="unspecified" name="makeGetRequest" fullname="HueGroup::makeGetRequest" href="huegroup.html#makeGetRequest" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="49" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="HueRequest" signature="HueRequest makeGetRequest() override"/>
            <function threadsafety="unspecified" name="makePutRequest" fullname="HueGroup::makePutRequest" href="huegroup.html#makePutRequest" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="48" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="HueRequest" signature="HueRequest makePutRequest(QJsonObject json) override">
                <parameter left="QJsonObject" right="" name="json" default=""/>
            </function>
            <function threadsafety="unspecified" name="constructHueGroup" fullname="HueGroup::constructHueGroup" href="huegroup.html#constructHueGroup" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="46" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool constructHueGroup(int ID, QJsonObject json, std::shared_ptr&lt;HueGroup&gt; &amp;group)">
                <parameter left="int" right="" name="ID" default=""/>
                <parameter left="QJsonObject" right="" name="json" default=""/>
                <parameter left="std::shared_ptr&lt;HueGroup&gt; &amp;" right="" name="group" default=""/>
            </function>
            <function threadsafety="unspecified" name="synchronize" fullname="HueGroup::synchronize" href="huegroup.html#synchronize" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="34" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool synchronize() override"/>
            <function threadsafety="unspecified" name="linkToLights" fullname="HueGroup::linkToLights" href="huegroup.html#linkToLights" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void linkToLights(const HueLightList &amp;lights)">
                <parameter left="const HueLightList &amp;" right="" name="lights" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateAlert" fullname="HueGroup::updateAlert" href="huegroup.html#updateAlert" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="57" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateAlert(const HueAlert alert) override">
                <parameter left="const HueAlert" right="" name="alert" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateBrightness" fullname="HueGroup::updateBrightness" href="huegroup.html#updateBrightness" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="54" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateBrightness(const int brightness) override">
                <parameter left="const int" right="" name="brightness" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateColorTemp" fullname="HueGroup::updateColorTemp" href="huegroup.html#updateColorTemp" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="55" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateColorTemp(const int colorTemp) override">
                <parameter left="const int" right="" name="colorTemp" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateEffect" fullname="HueGroup::updateEffect" href="huegroup.html#updateEffect" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="58" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateEffect(const HueEffect effect) override">
                <parameter left="const HueEffect" right="" name="effect" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateHue" fullname="HueGroup::updateHue" href="huegroup.html#updateHue" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="52" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateHue(const int hue) override">
                <parameter left="const int" right="" name="hue" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateOn" fullname="HueGroup::updateOn" href="huegroup.html#updateOn" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="51" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateOn(const bool on) override">
                <parameter left="const bool" right="" name="on" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateSaturation" fullname="HueGroup::updateSaturation" href="huegroup.html#updateSaturation" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="53" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateSaturation(const int saturation) override">
                <parameter left="const int" right="" name="saturation" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateXY" fullname="HueGroup::updateXY" href="huegroup.html#updateXY" status="active" access="private" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="56" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateXY(const double x, const double y) override">
                <parameter left="const double" right="" name="x" default=""/>
                <parameter left="const double" right="" name="y" default=""/>
            </function>
            <function threadsafety="unspecified" name="action" fullname="HueGroup::action" href="huegroup.html#action" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::Action" signature="Group::Action action() const"/>
            <function threadsafety="unspecified" name="groupClass" fullname="HueGroup::groupClass" href="huegroup.html#groupClass" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="28" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::GroupClass" signature="Group::GroupClass groupClass() const"/>
            <function threadsafety="unspecified" name="lights" fullname="HueGroup::lights" href="huegroup.html#lights" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::Lights" signature="Group::Lights lights() const"/>
            <function threadsafety="unspecified" name="name" fullname="HueGroup::name" href="huegroup.html#name" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="26" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::Name" signature="Group::Name name() const"/>
            <function threadsafety="unspecified" name="recycle" fullname="HueGroup::recycle" href="huegroup.html#recycle" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="29" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::Recycle" signature="Group::Recycle recycle() const"/>
            <function threadsafety="unspecified" name="sensors" fullname="HueGroup::sensors" href="huegroup.html#sensors" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="24" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::Sensors" signature="Group::Sensors sensors() const"/>
            <function threadsafety="unspecified" name="state" fullname="HueGroup::state" href="huegroup.html#state" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="25" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::State" signature="Group::State state() const"/>
            <function threadsafety="unspecified" name="type" fullname="HueGroup::type" href="huegroup.html#type" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="27" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Group::Type" signature="Group::Type type() const"/>
            <function threadsafety="unspecified" name="getLights" fullname="HueGroup::getLights" href="huegroup.html#getLights" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueLightList" signature="HueLightList getLights(const HueLightList &amp;lights) const">
                <parameter left="const HueLightList &amp;" right="" name="lights" default=""/>
            </function>
            <function threadsafety="unspecified" name="hasValidConstructor" fullname="HueGroup::hasValidConstructor" href="huegroup.html#hasValidConstructor" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="31" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool hasValidConstructor() const override"/>
            <function threadsafety="unspecified" name="isValid" fullname="HueGroup::isValid" href="huegroup.html#isValid" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="32" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
            <function threadsafety="unspecified" name="ID" fullname="HueGroup::ID" href="huegroup.html#ID" status="active" access="public" location="huegroup.h" filepath="/home/erik/Dev/huelib/source/huegroup.h" lineno="33" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="int" signature="int ID() const override"/>
        </class>
        <class threadsafety="unspecified" name="HueLight" href="huelight.html" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="10" bases="HueAbstractObject" groups="HueLib" brief="Used to interface with a single Hue light">
            <function threadsafety="unspecified" name="operator=" fullname="HueLight::operator=" href="huelight.html#operator-eq" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="49" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueLight" signature="HueLight operator=(const HueLight &amp;rhs)">
                <parameter left="const HueLight &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueLight" fullname="HueLight::HueLight" href="huelight.html#HueLight" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueLight()"/>
            <function threadsafety="unspecified" name="HueLight" fullname="HueLight::HueLight" href="huelight.html#HueLight-1" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="15" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueLight(HueBridge *bridge)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueLight" fullname="HueLight::HueLight" href="huelight.html#HueLight-2" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueLight(HueBridge *bridge, int ID, Light::State state, Light::Name name, Light::Type type, Light::UniqueID uniqueID, Light::SoftwareVersion softwareVersion, Light::SoftwareUpdate softwareUpdate, Light::SoftwareConfigID softwareConfigID, Light::ProductName productName, Light::Manufacturer manufacturer, Light::ProductID productID, Light::Config config)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
                <parameter left="int" right="" name="ID" default=""/>
                <parameter left="Light::State" right="" name="state" default=""/>
                <parameter left="Light::Name" right="" name="name" default=""/>
                <parameter left="Light::Type" right="" name="type" default=""/>
                <parameter left="Light::UniqueID" right="" name="uniqueID" default=""/>
                <parameter left="Light::SoftwareVersion" right="" name="softwareVersion" default=""/>
                <parameter left="Light::SoftwareUpdate" right="" name="softwareUpdate" default=""/>
                <parameter left="Light::SoftwareConfigID" right="" name="softwareConfigID" default=""/>
                <parameter left="Light::ProductName" right="" name="productName" default=""/>
                <parameter left="Light::Manufacturer" right="" name="manufacturer" default=""/>
                <parameter left="Light::ProductID" right="" name="productID" default=""/>
                <parameter left="Light::Config" right="" name="config" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueLight" fullname="HueLight::HueLight" href="huelight.html#HueLight-3" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="48" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueLight(const HueLight &amp;rhs)">
                <parameter left="const HueLight &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="discoverLights" fullname="HueLight::discoverLights" href="huelight.html#discoverLights" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="17" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="HueLightList" signature="HueLightList discoverLights(HueBridge *bridge)">
                <parameter left="HueBridge *" right="" name="bridge" default=""/>
            </function>
            <function threadsafety="unspecified" name="makeGetRequest" fullname="HueLight::makeGetRequest" href="huelight.html#makeGetRequest" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="54" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="HueRequest" signature="HueRequest makeGetRequest() override"/>
            <function threadsafety="unspecified" name="makePutRequest" fullname="HueLight::makePutRequest" href="huelight.html#makePutRequest" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="53" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="HueRequest" signature="HueRequest makePutRequest(QJsonObject json) override">
                <parameter left="QJsonObject" right="" name="json" default=""/>
            </function>
            <function threadsafety="unspecified" name="constructHueLight" fullname="HueLight::constructHueLight" href="huelight.html#constructHueLight" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="51" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool constructHueLight(int ID, QJsonObject json, std::shared_ptr&lt;HueLight&gt; &amp;light)">
                <parameter left="int" right="" name="ID" default=""/>
                <parameter left="QJsonObject" right="" name="json" default=""/>
                <parameter left="std::shared_ptr&lt;HueLight&gt; &amp;" right="" name="light" default=""/>
            </function>
            <function threadsafety="unspecified" name="synchronize" fullname="HueLight::synchronize" href="huelight.html#synchronize" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="34" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool synchronize() override"/>
            <function threadsafety="unspecified" name="updateAlert" fullname="HueLight::updateAlert" href="huelight.html#updateAlert" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="62" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateAlert(const HueAlert alert) override">
                <parameter left="const HueAlert" right="" name="alert" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateBrightness" fullname="HueLight::updateBrightness" href="huelight.html#updateBrightness" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="59" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateBrightness(const int brightness) override">
                <parameter left="const int" right="" name="brightness" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateColorTemp" fullname="HueLight::updateColorTemp" href="huelight.html#updateColorTemp" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="60" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateColorTemp(const int colorTemp) override">
                <parameter left="const int" right="" name="colorTemp" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateEffect" fullname="HueLight::updateEffect" href="huelight.html#updateEffect" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="63" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateEffect(const HueEffect effect) override">
                <parameter left="const HueEffect" right="" name="effect" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateHue" fullname="HueLight::updateHue" href="huelight.html#updateHue" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="57" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateHue(const int hue) override">
                <parameter left="const int" right="" name="hue" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateOn" fullname="HueLight::updateOn" href="huelight.html#updateOn" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="56" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateOn(const bool on) override">
                <parameter left="const bool" right="" name="on" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateSaturation" fullname="HueLight::updateSaturation" href="huelight.html#updateSaturation" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="58" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateSaturation(const int saturation) override">
                <parameter left="const int" right="" name="saturation" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateXY" fullname="HueLight::updateXY" href="huelight.html#updateXY" status="active" access="private" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="61" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void updateXY(const double x, const double y) override">
                <parameter left="const double" right="" name="x" default=""/>
                <parameter left="const double" right="" name="y" default=""/>
            </function>
            <function threadsafety="unspecified" name="config" fullname="HueLight::config" href="huelight.html#config" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="29" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::Config" signature="Light::Config config() const"/>
            <function threadsafety="unspecified" name="manufacturer" fullname="HueLight::manufacturer" href="huelight.html#manufacturer" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="27" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::Manufacturer" signature="Light::Manufacturer manufacturer() const"/>
            <function threadsafety="unspecified" name="name" fullname="HueLight::name" href="huelight.html#name" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::Name" signature="Light::Name name() const"/>
            <function threadsafety="unspecified" name="productID" fullname="HueLight::productID" href="huelight.html#productID" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="28" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::ProductID" signature="Light::ProductID productID() const"/>
            <function threadsafety="unspecified" name="productName" fullname="HueLight::productName" href="huelight.html#productName" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="26" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::ProductName" signature="Light::ProductName productName() const"/>
            <function threadsafety="unspecified" name="softwareConfigID" fullname="HueLight::softwareConfigID" href="huelight.html#softwareConfigID" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="25" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::SoftwareConfigID" signature="Light::SoftwareConfigID softwareConfigID() const"/>
            <function threadsafety="unspecified" name="softwareUpdate" fullname="HueLight::softwareUpdate" href="huelight.html#softwareUpdate" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="24" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::SoftwareUpdate" signature="Light::SoftwareUpdate softwareUpdate() const"/>
            <function threadsafety="unspecified" name="softwareVersion" fullname="HueLight::softwareVersion" href="huelight.html#softwareVersion" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::SoftwareVersion" signature="Light::SoftwareVersion softwareVersion() const"/>
            <function threadsafety="unspecified" name="state" fullname="HueLight::state" href="huelight.html#state" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="19" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::State" signature="Light::State state() const"/>
            <function threadsafety="unspecified" name="type" fullname="HueLight::type" href="huelight.html#type" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="21" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::Type" signature="Light::Type type() const"/>
            <function threadsafety="unspecified" name="uniqueID" fullname="HueLight::uniqueID" href="huelight.html#uniqueID" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Light::UniqueID" signature="Light::UniqueID uniqueID() const"/>
            <function threadsafety="unspecified" name="hasValidConstructor" fullname="HueLight::hasValidConstructor" href="huelight.html#hasValidConstructor" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="31" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool hasValidConstructor() const override"/>
            <function threadsafety="unspecified" name="isValid" fullname="HueLight::isValid" href="huelight.html#isValid" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="32" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool isValid() const override"/>
            <function threadsafety="unspecified" name="ID" fullname="HueLight::ID" href="huelight.html#ID" status="active" access="public" location="huelight.h" filepath="/home/erik/Dev/huelib/source/huelight.h" lineno="33" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="int" signature="int ID() const override"/>
        </class>
        <class threadsafety="unspecified" name="HueObjectList" href="hueobjectlist.html" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="11"/>
        <typedef threadsafety="unspecified" name="HueGroupList" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="198"/>
        <typedef threadsafety="unspecified" name="HueLightList" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="195"/>
        <function threadsafety="unspecified" name="HueObjectList" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueObjectList()"/>
        <function threadsafety="unspecified" name="HueObjectList" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueObjectList(HueObjectList &amp;&amp;rhs)">
            <parameter left="HueObjectList &amp;&amp;" right="" name="rhs" default=""/>
        </function>
        <function threadsafety="unspecified" name="HueObjectList" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueObjectList(const HueObjectList &amp;rhs)">
            <parameter left="const HueObjectList &amp;" right="" name="rhs" default=""/>
        </function>
        <function threadsafety="unspecified" name="HueObjectList" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueObjectList(std::shared_ptr&lt;ObjectList&gt; hueObjectList)">
            <parameter left="std::shared_ptr&lt;ObjectList&gt;" right="" name="hueObjectList" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator++" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="176" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueObjectList&lt;HueObject&gt;::iterator" signature="HueObjectList&lt;HueObject&gt;::iterator operator++()"/>
        <function threadsafety="unspecified" name="operator=" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="95" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const HueObjectList&lt;HueObject&gt; &amp;" signature="const HueObjectList&lt;HueObject&gt; &amp; operator=(HueObjectList &amp;&amp;rhs)">
            <parameter left="HueObjectList &amp;&amp;" right="" name="rhs" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator=" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="85" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const HueObjectList&lt;HueObject&gt; &amp;" signature="const HueObjectList&lt;HueObject&gt; &amp; operator=(const HueObjectList &amp;rhs)">
            <parameter left="const HueObjectList &amp;" right="" name="rhs" default=""/>
        </function>
        <function threadsafety="unspecified" name="iterator" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="iterator(ObjectList::iterator iter)">
            <parameter left="ObjectList::iterator" right="" name="iter" default=""/>
        </function>
        <function threadsafety="unspecified" name="~HueObjectList&lt;HueObject&gt;" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="65" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HueObjectList&lt;HueObject&gt;()"/>
        <function threadsafety="unspecified" name="fetchRaw" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="162" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueObject *" signature="HueObject * fetchRaw(QString name) const">
            <parameter left="QString" right="" name="name" default=""/>
        </function>
        <function threadsafety="unspecified" name="fetchRaw" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="156" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueObject *" signature="HueObject * fetchRaw(int ID) const">
            <parameter left="int" right="" name="ID" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator*" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="189" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueObject *" signature="HueObject * operator*() const"/>
        <function threadsafety="unspecified" name="begin" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="111" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueObjectList&lt;HueObject&gt;::iterator" signature="HueObjectList&lt;HueObject&gt;::iterator begin() const"/>
        <function threadsafety="unspecified" name="end" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="117" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueObjectList&lt;HueObject&gt;::iterator" signature="HueObjectList&lt;HueObject&gt;::iterator end() const"/>
        <function threadsafety="unspecified" name="operator!=" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="183" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const HueObjectList&lt;HueObject&gt;::iterator &amp;rhs) const">
            <parameter left="const HueObjectList&lt;HueObject&gt;::iterator &amp;" right="" name="rhs" default=""/>
        </function>
        <function threadsafety="unspecified" name="size" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="105" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
        <function threadsafety="unspecified" name="at" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="123" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::shared_ptr&lt;HueObject&gt;" signature="std::shared_ptr&lt;HueObject&gt; at(int index) const">
            <parameter left="int" right="" name="index" default=""/>
        </function>
        <function threadsafety="unspecified" name="fetch" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="144" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::shared_ptr&lt;HueObject&gt;" signature="std::shared_ptr&lt;HueObject&gt; fetch(QString name) const">
            <parameter left="QString" right="" name="name" default=""/>
        </function>
        <function threadsafety="unspecified" name="fetch" status="internal" access="private" location="hueobjectlist.h" filepath="/home/erik/Dev/huelib/source/hueobjectlist.h" lineno="132" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::shared_ptr&lt;HueObject&gt;" signature="std::shared_ptr&lt;HueObject&gt; fetch(int ID) const">
            <parameter left="int" right="" name="ID" default=""/>
        </function>
        <class threadsafety="unspecified" name="HueReply" href="huereply.html" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="9" groups="HueLib" brief="Contains the details of reply received from HueBridge::sendRequest()">
            <function threadsafety="unspecified" name="operator=" fullname="HueReply::operator=" href="huereply.html#operator-eq" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="16" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueReply" signature="HueReply operator=(const HueReply &amp;rhs)">
                <parameter left="const HueReply &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueReply" fullname="HueReply::HueReply" href="huereply.html#HueReply" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="12" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueReply()"/>
            <function threadsafety="unspecified" name="HueReply" fullname="HueReply::HueReply" href="huereply.html#HueReply-1" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="13" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueReply(bool replyValid, bool timedOut, QJsonObject json, int httpStatus, HueError error)">
                <parameter left="bool" right="" name="replyValid" default=""/>
                <parameter left="bool" right="" name="timedOut" default=""/>
                <parameter left="QJsonObject" right="" name="json" default=""/>
                <parameter left="int" right="" name="httpStatus" default=""/>
                <parameter left="HueError" right="" name="error" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueReply" fullname="HueReply::HueReply" href="huereply.html#HueReply-2" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="15" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueReply(const HueReply &amp;rhs)">
                <parameter left="const HueReply &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="isValid" fullname="HueReply::isValid" href="huereply.html#isValid-1" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="25" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void isValid(const bool replyValid)">
                <parameter left="const bool" right="" name="replyValid" default=""/>
            </function>
            <function threadsafety="unspecified" name="setError" fullname="HueReply::setError" href="huereply.html#setError" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setError(const HueError error)">
                <parameter left="const HueError" right="" name="error" default=""/>
            </function>
            <function threadsafety="unspecified" name="setHttpStatus" fullname="HueReply::setHttpStatus" href="huereply.html#setHttpStatus" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setHttpStatus(const int httpStatus)">
                <parameter left="const int" right="" name="httpStatus" default=""/>
            </function>
            <function threadsafety="unspecified" name="setJson" fullname="HueReply::setJson" href="huereply.html#setJson" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="27" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setJson(const QJsonObject json)">
                <parameter left="const QJsonObject" right="" name="json" default=""/>
            </function>
            <function threadsafety="unspecified" name="timedOut" fullname="HueReply::timedOut" href="huereply.html#timedOut-1" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void timedOut(const bool timedOut)">
                <parameter left="const bool" right="" name="timedOut" default=""/>
            </function>
            <function threadsafety="unspecified" name="getError" fullname="HueReply::getError" href="huereply.html#getError" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueError" signature="HueError getError() const"/>
            <function threadsafety="unspecified" name="getJson" fullname="HueReply::getJson" href="huereply.html#getJson" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="21" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QJsonObject" signature="QJsonObject getJson() const"/>
            <function threadsafety="unspecified" name="containsError" fullname="HueReply::containsError" href="huereply.html#containsError" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool containsError() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="HueReply::isValid" href="huereply.html#isValid" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="18" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
            <function threadsafety="unspecified" name="timedOut" fullname="HueReply::timedOut" href="huereply.html#timedOut" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="19" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool timedOut() const"/>
            <function threadsafety="unspecified" name="getHttpStatus" fullname="HueReply::getHttpStatus" href="huereply.html#getHttpStatus" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getHttpStatus() const"/>
            <function threadsafety="unspecified" name="operator QString" fullname="HueReply::operator QString" href="huereply.html#operator-QString" status="active" access="public" location="huereply.h" filepath="/home/erik/Dev/huelib/source/huereply.h" lineno="31" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator QString() const"/>
        </class>
        <class threadsafety="unspecified" name="HueRequest" href="huerequest.html" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="7" groups="HueLib" brief="Contains the details of request sent to HueBridge::sendRequest()">
            <function threadsafety="unspecified" name="operator=" fullname="HueRequest::operator=" href="huerequest.html#operator-eq" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="18" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HueRequest" signature="HueRequest operator=(const HueRequest &amp;rhs)">
                <parameter left="const HueRequest &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueRequest" fullname="HueRequest::HueRequest" href="huerequest.html#HueRequest" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="16" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueRequest(QString urlPath, QJsonObject json, Method method)">
                <parameter left="QString" right="" name="urlPath" default=""/>
                <parameter left="QJsonObject" right="" name="json" default=""/>
                <parameter left="Method" right="" name="method" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueRequest" fullname="HueRequest::HueRequest" href="huerequest.html#HueRequest-1" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="17" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueRequest(const HueRequest &amp;rhs)">
                <parameter left="const HueRequest &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="getMethod" fullname="HueRequest::getMethod" href="huerequest.html#getMethod" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Method" signature="Method getMethod() const"/>
            <function threadsafety="unspecified" name="getJson" fullname="HueRequest::getJson" href="huerequest.html#getJson" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="21" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QJsonObject" signature="QJsonObject getJson() const"/>
            <function threadsafety="unspecified" name="getUrlPath" fullname="HueRequest::getUrlPath" href="huerequest.html#getUrlPath" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getUrlPath() const"/>
            <enum threadsafety="unspecified" name="Method" fullname="HueRequest::Method" href="huerequest.html#Method-enum" status="active" access="public" location="huerequest.h" filepath="/home/erik/Dev/huelib/source/huerequest.h" lineno="10">
                <value name="Get" value="0"/>
                <value name="Put" value="1"/>
                <value name="Post" value="2"/>
            </enum>
        </class>
        <class threadsafety="unspecified" name="HueSynchronizer" href="huesynchronizer.html" status="internal" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="10">
            <function threadsafety="unspecified" name="instance" fullname="HueSynchronizer::instance" href="huesynchronizer.html#instance" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="21" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="HueSynchronizer &amp;" signature="HueSynchronizer &amp; instance()"/>
            <function threadsafety="unspecified" name="operator=" fullname="HueSynchronizer::operator=" href="huesynchronizer.html#operator-eq" status="active" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="39" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="HueSynchronizer &amp;" signature="HueSynchronizer &amp; operator=(HueSynchronizer &amp;rhs) = delete">
                <parameter left="HueSynchronizer &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="HueSynchronizer" fullname="HueSynchronizer::HueSynchronizer" href="huesynchronizer.html#HueSynchronizer" status="active" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HueSynchronizer()"/>
            <function threadsafety="unspecified" name="HueSynchronizer" fullname="HueSynchronizer::HueSynchronizer" href="huesynchronizer.html#HueSynchronizer-1" status="active" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="38" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="HueSynchronizer(const HueSynchronizer &amp;rhs) = delete">
                <parameter left="const HueSynchronizer &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="addHueObject" fullname="HueSynchronizer::addHueObject" href="huesynchronizer.html#addHueObject" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="33" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool addHueObject(std::shared_ptr&lt;HueAbstractObject&gt; object)">
                <parameter left="std::shared_ptr&lt;HueAbstractObject&gt;" right="" name="object" default=""/>
            </function>
            <function threadsafety="unspecified" name="isActive" fullname="HueSynchronizer::isActive" href="huesynchronizer.html#isActive" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="31" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isActive()"/>
            <function threadsafety="unspecified" name="removeHueObject" fullname="HueSynchronizer::removeHueObject" href="huesynchronizer.html#removeHueObject" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool removeHueObject(std::shared_ptr&lt;HueAbstractObject&gt; object)">
                <parameter left="std::shared_ptr&lt;HueAbstractObject&gt;" right="" name="object" default=""/>
            </function>
            <function threadsafety="unspecified" name="clear" fullname="HueSynchronizer::clear" href="huesynchronizer.html#clear" status="active" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int clear(ClearCondition condition)">
                <parameter left="ClearCondition" right="" name="condition" default=""/>
            </function>
            <function threadsafety="unspecified" name="clearAll" fullname="HueSynchronizer::clearAll" href="huesynchronizer.html#clearAll" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="23" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int clearAll()"/>
            <function threadsafety="unspecified" name="clearGroups" fullname="HueSynchronizer::clearGroups" href="huesynchronizer.html#clearGroups" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="24" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int clearGroups()"/>
            <function threadsafety="unspecified" name="clearLights" fullname="HueSynchronizer::clearLights" href="huesynchronizer.html#clearLights" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="25" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int clearLights()"/>
            <function threadsafety="unspecified" name="listSize" fullname="HueSynchronizer::listSize" href="huesynchronizer.html#listSize" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="30" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int listSize()"/>
            <function threadsafety="unspecified" name="setSyncInterval" fullname="HueSynchronizer::setSyncInterval" href="huesynchronizer.html#setSyncInterval" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="22" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSyncInterval(int intervalMilliSec)">
                <parameter left="int" right="" name="intervalMilliSec" default=""/>
            </function>
            <function threadsafety="unspecified" name="start" fullname="HueSynchronizer::start" href="huesynchronizer.html#start" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="27" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void start()"/>
            <function threadsafety="unspecified" name="stop" fullname="HueSynchronizer::stop" href="huesynchronizer.html#stop" status="active" access="public" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void stop()"/>
            <function threadsafety="unspecified" name="synchronize" fullname="HueSynchronizer::synchronize" href="huesynchronizer.html#synchronize" status="active" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="43" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void synchronize()"/>
            <enum threadsafety="unspecified" name="ClearCondition" fullname="HueSynchronizer::ClearCondition" href="huesynchronizer.html#ClearCondition-enum" status="active" access="private" location="huesynchronizer.h" filepath="/home/erik/Dev/huelib/source/huesynchronizer.h" lineno="14">
                <value name="ClearAll" value="0"/>
                <value name="ClearGroups" value="1"/>
                <value name="ClearLights" value="2"/>
            </enum>
        </class>
        <namespace threadsafety="unspecified" name="Group" href="group.html" status="internal" access="private" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="240">
            <class threadsafety="unspecified" name="Action" fullname="Group::Action" href="group-action.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="242">
                <function threadsafety="unspecified" name="Action" fullname="Group::Action::Action" href="group-action.html#Action" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="245" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Action()"/>
                <function threadsafety="unspecified" name="Action" fullname="Group::Action::Action" href="group-action.html#Action-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="246" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Action(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setAlert" fullname="Group::Action::setAlert" href="group-action.html#setAlert" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="268" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAlert(const QString alert)">
                    <parameter left="const QString" right="" name="alert" default=""/>
                </function>
                <function threadsafety="unspecified" name="setBrightness" fullname="Group::Action::setBrightness" href="group-action.html#setBrightness" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="260" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setBrightness(const int brightness)">
                    <parameter left="const int" right="" name="brightness" default=""/>
                </function>
                <function threadsafety="unspecified" name="setColorMode" fullname="Group::Action::setColorMode" href="group-action.html#setColorMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="267" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setColorMode(const QString colorMode)">
                    <parameter left="const QString" right="" name="colorMode" default=""/>
                </function>
                <function threadsafety="unspecified" name="setColorTemp" fullname="Group::Action::setColorTemp" href="group-action.html#setColorTemp" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="263" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setColorTemp(const int colorTemp)">
                    <parameter left="const int" right="" name="colorTemp" default=""/>
                </function>
                <function threadsafety="unspecified" name="setEffect" fullname="Group::Action::setEffect" href="group-action.html#setEffect" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="266" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setEffect(const QString effect)">
                    <parameter left="const QString" right="" name="effect" default=""/>
                </function>
                <function threadsafety="unspecified" name="setHue" fullname="Group::Action::setHue" href="group-action.html#setHue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="261" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setHue(const int hue)">
                    <parameter left="const int" right="" name="hue" default=""/>
                </function>
                <function threadsafety="unspecified" name="setOn" fullname="Group::Action::setOn" href="group-action.html#setOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="259" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setOn(const bool on)">
                    <parameter left="const bool" right="" name="on" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSaturation" fullname="Group::Action::setSaturation" href="group-action.html#setSaturation" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="262" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSaturation(const int saturation)">
                    <parameter left="const int" right="" name="saturation" default=""/>
                </function>
                <function threadsafety="unspecified" name="setXValue" fullname="Group::Action::setXValue" href="group-action.html#setXValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="264" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setXValue(const double xValue)">
                    <parameter left="const double" right="" name="xValue" default=""/>
                </function>
                <function threadsafety="unspecified" name="setYValue" fullname="Group::Action::setYValue" href="group-action.html#setYValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="265" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setYValue(const double yValue)">
                    <parameter left="const double" right="" name="yValue" default=""/>
                </function>
                <function threadsafety="unspecified" name="getAlert" fullname="Group::Action::getAlert" href="group-action.html#getAlert" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="256" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getAlert() const"/>
                <function threadsafety="unspecified" name="getColorMode" fullname="Group::Action::getColorMode" href="group-action.html#getColorMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="257" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getColorMode() const"/>
                <function threadsafety="unspecified" name="getEffect" fullname="Group::Action::getEffect" href="group-action.html#getEffect" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="255" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getEffect() const"/>
                <function threadsafety="unspecified" name="isOn" fullname="Group::Action::isOn" href="group-action.html#isOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="248" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isOn() const"/>
                <function threadsafety="unspecified" name="getXValue" fullname="Group::Action::getXValue" href="group-action.html#getXValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="253" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getXValue() const"/>
                <function threadsafety="unspecified" name="getYValue" fullname="Group::Action::getYValue" href="group-action.html#getYValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="254" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getYValue() const"/>
                <function threadsafety="unspecified" name="getBrightness" fullname="Group::Action::getBrightness" href="group-action.html#getBrightness" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="249" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getBrightness() const"/>
                <function threadsafety="unspecified" name="getColorTemp" fullname="Group::Action::getColorTemp" href="group-action.html#getColorTemp" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="252" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getColorTemp() const"/>
                <function threadsafety="unspecified" name="getHue" fullname="Group::Action::getHue" href="group-action.html#getHue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="250" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getHue() const"/>
                <function threadsafety="unspecified" name="getSaturation" fullname="Group::Action::getSaturation" href="group-action.html#getSaturation" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="251" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getSaturation() const"/>
            </class>
            <class threadsafety="unspecified" name="GroupClass" fullname="Group::GroupClass" href="group-groupclass.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="356">
                <function threadsafety="unspecified" name="GroupClass" fullname="Group::GroupClass::GroupClass" href="group-groupclass.html#GroupClass" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="359" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GroupClass()"/>
                <function threadsafety="unspecified" name="GroupClass" fullname="Group::GroupClass::GroupClass" href="group-groupclass.html#GroupClass-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="360" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GroupClass(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setGroupClass" fullname="Group::GroupClass::setGroupClass" href="group-groupclass.html#setGroupClass" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="364" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setGroupClass(const QString groupClass)">
                    <parameter left="const QString" right="" name="groupClass" default=""/>
                </function>
                <function threadsafety="unspecified" name="getGroupClass" fullname="Group::GroupClass::getGroupClass" href="group-groupclass.html#getGroupClass" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="362" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getGroupClass() const"/>
            </class>
            <class threadsafety="unspecified" name="Lights" fullname="Group::Lights" href="group-lights.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="283">
                <function threadsafety="unspecified" name="Lights" fullname="Group::Lights::Lights" href="group-lights.html#Lights" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="286" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Lights()"/>
                <function threadsafety="unspecified" name="Lights" fullname="Group::Lights::Lights" href="group-lights.html#Lights-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="287" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Lights(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setLights" fullname="Group::Lights::setLights" href="group-lights.html#setLights" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="291" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLights(const QList&lt;QString&gt; lights)">
                    <parameter left="const QList&lt;QString&gt;" right="" name="lights" default=""/>
                </function>
                <function threadsafety="unspecified" name="getLights" fullname="Group::Lights::getLights" href="group-lights.html#getLights" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="289" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QString&gt;" signature="QList&lt;QString&gt; getLights() const"/>
            </class>
            <class threadsafety="unspecified" name="Name" fullname="Group::Name" href="group-name.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="328">
                <function threadsafety="unspecified" name="Name" fullname="Group::Name::Name" href="group-name.html#Name" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="331" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Name()"/>
                <function threadsafety="unspecified" name="Name" fullname="Group::Name::Name" href="group-name.html#Name-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="332" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Name(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setName" fullname="Group::Name::setName" href="group-name.html#setName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="336" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setName(const QString name)">
                    <parameter left="const QString" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="getName" fullname="Group::Name::getName" href="group-name.html#getName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="334" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getName() const"/>
            </class>
            <class threadsafety="unspecified" name="Recycle" fullname="Group::Recycle" href="group-recycle.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="370">
                <function threadsafety="unspecified" name="Recycle" fullname="Group::Recycle::Recycle" href="group-recycle.html#Recycle" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="373" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Recycle()"/>
                <function threadsafety="unspecified" name="Recycle" fullname="Group::Recycle::Recycle" href="group-recycle.html#Recycle-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="374" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Recycle(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setRecycle" fullname="Group::Recycle::setRecycle" href="group-recycle.html#setRecycle" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="378" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setRecycle(const bool recycle)">
                    <parameter left="const bool" right="" name="recycle" default=""/>
                </function>
                <function threadsafety="unspecified" name="getRecycle" fullname="Group::Recycle::getRecycle" href="group-recycle.html#getRecycle" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="376" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getRecycle() const"/>
            </class>
            <class threadsafety="unspecified" name="Sensors" fullname="Group::Sensors" href="group-sensors.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="297">
                <function threadsafety="unspecified" name="Sensors" fullname="Group::Sensors::Sensors" href="group-sensors.html#Sensors" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="300" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Sensors()"/>
                <function threadsafety="unspecified" name="Sensors" fullname="Group::Sensors::Sensors" href="group-sensors.html#Sensors-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="301" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Sensors(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSensors" fullname="Group::Sensors::setSensors" href="group-sensors.html#setSensors" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="305" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSensors(const QList&lt;QString&gt; sensors)">
                    <parameter left="const QList&lt;QString&gt;" right="" name="sensors" default=""/>
                </function>
                <function threadsafety="unspecified" name="getSensors" fullname="Group::Sensors::getSensors" href="group-sensors.html#getSensors" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="303" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QString&gt;" signature="QList&lt;QString&gt; getSensors() const"/>
            </class>
            <class threadsafety="unspecified" name="State" fullname="Group::State" href="group-state.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="311">
                <function threadsafety="unspecified" name="State" fullname="Group::State::State" href="group-state.html#State" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="314" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="State()"/>
                <function threadsafety="unspecified" name="State" fullname="Group::State::State" href="group-state.html#State-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="315" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="State(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setAllOn" fullname="Group::State::setAllOn" href="group-state.html#setAllOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="320" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAllOn(const bool allOn)">
                    <parameter left="const bool" right="" name="allOn" default=""/>
                </function>
                <function threadsafety="unspecified" name="setAnyOn" fullname="Group::State::setAnyOn" href="group-state.html#setAnyOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="321" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAnyOn(const bool anyOn)">
                    <parameter left="const bool" right="" name="anyOn" default=""/>
                </function>
                <function threadsafety="unspecified" name="getAllOn" fullname="Group::State::getAllOn" href="group-state.html#getAllOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="317" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getAllOn() const"/>
                <function threadsafety="unspecified" name="getAnyOn" fullname="Group::State::getAnyOn" href="group-state.html#getAnyOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="318" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getAnyOn() const"/>
            </class>
            <class threadsafety="unspecified" name="Type" fullname="Group::Type" href="group-type.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="342">
                <function threadsafety="unspecified" name="Type" fullname="Group::Type::Type" href="group-type.html#Type" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="345" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Type()"/>
                <function threadsafety="unspecified" name="Type" fullname="Group::Type::Type" href="group-type.html#Type-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="346" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Type(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setType" fullname="Group::Type::setType" href="group-type.html#setType" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="350" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setType(const QString type)">
                    <parameter left="const QString" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="getType" fullname="Group::Type::getType" href="group-type.html#getType" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="348" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getType() const"/>
            </class>
        </namespace>
        <namespace threadsafety="unspecified" name="Light" href="light.html" status="internal" access="private" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="14">
            <class threadsafety="unspecified" name="Config" fullname="Light::Config" href="light-config.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="190">
                <function threadsafety="unspecified" name="Config" fullname="Light::Config::Config" href="light-config.html#Config" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="211" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Config()"/>
                <function threadsafety="unspecified" name="Config" fullname="Light::Config::Config" href="light-config.html#Config-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="212" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Config(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setArchetype" fullname="Light::Config::setArchetype" href="light-config.html#setArchetype" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="219" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setArchetype(const QString archetype)">
                    <parameter left="const QString" right="" name="archetype" default=""/>
                </function>
                <function threadsafety="unspecified" name="setDirection" fullname="Light::Config::setDirection" href="light-config.html#setDirection" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="221" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDirection(const QString direction)">
                    <parameter left="const QString" right="" name="direction" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFunction" fullname="Light::Config::setFunction" href="light-config.html#setFunction" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="220" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFunction(const QString function)">
                    <parameter left="const QString" right="" name="function" default=""/>
                </function>
                <function threadsafety="unspecified" name="setStartup" fullname="Light::Config::setStartup" href="light-config.html#setStartup" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="222" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setStartup(const Startup startup)">
                    <parameter left="const Startup" right="" name="startup" default=""/>
                </function>
                <function threadsafety="unspecified" name="getArchetype" fullname="Light::Config::getArchetype" href="light-config.html#getArchetype" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="214" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getArchetype() const"/>
                <function threadsafety="unspecified" name="getDirection" fullname="Light::Config::getDirection" href="light-config.html#getDirection" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="216" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getDirection() const"/>
                <function threadsafety="unspecified" name="getFunction" fullname="Light::Config::getFunction" href="light-config.html#getFunction" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="215" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getFunction() const"/>
                <function threadsafety="unspecified" name="getStartup" fullname="Light::Config::getStartup" href="light-config.html#getStartup" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="217" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Startup" signature="Startup getStartup() const"/>
                <class threadsafety="unspecified" name="Startup" fullname="Light::Config::Startup" href="light-config-startup.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="193">
                    <function threadsafety="unspecified" name="Startup" fullname="Light::Config::Startup::Startup" href="light-config-startup.html#Startup" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="196" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Startup()"/>
                    <function threadsafety="unspecified" name="Startup" fullname="Light::Config::Startup::Startup" href="light-config-startup.html#Startup-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="197" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Startup(const QJsonValue json)">
                        <parameter left="const QJsonValue" right="" name="json" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setConfigured" fullname="Light::Config::Startup::setConfigured" href="light-config-startup.html#setConfigured" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="203" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setConfigured(bool configured)">
                        <parameter left="bool" right="" name="configured" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setMode" fullname="Light::Config::Startup::setMode" href="light-config-startup.html#setMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="202" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMode(const QString mode)">
                        <parameter left="const QString" right="" name="mode" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getMode" fullname="Light::Config::Startup::getMode" href="light-config-startup.html#getMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="199" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getMode() const"/>
                    <function threadsafety="unspecified" name="getConfigured" fullname="Light::Config::Startup::getConfigured" href="light-config-startup.html#getConfigured" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="200" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getConfigured() const"/>
                </class>
            </class>
            <class threadsafety="unspecified" name="Manufacturer" fullname="Light::Manufacturer" href="light-manufacturer.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="162">
                <function threadsafety="unspecified" name="Manufacturer" fullname="Light::Manufacturer::Manufacturer" href="light-manufacturer.html#Manufacturer" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="165" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Manufacturer()"/>
                <function threadsafety="unspecified" name="Manufacturer" fullname="Light::Manufacturer::Manufacturer" href="light-manufacturer.html#Manufacturer-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="166" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Manufacturer(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setManufacturer" fullname="Light::Manufacturer::setManufacturer" href="light-manufacturer.html#setManufacturer" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setManufacturer(const QString manufacturer)">
                    <parameter left="const QString" right="" name="manufacturer" default=""/>
                </function>
                <function threadsafety="unspecified" name="getManufacturer" fullname="Light::Manufacturer::getManufacturer" href="light-manufacturer.html#getManufacturer" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="168" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getManufacturer() const"/>
            </class>
            <class threadsafety="unspecified" name="Name" fullname="Light::Name" href="light-name.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="63">
                <function threadsafety="unspecified" name="Name" fullname="Light::Name::Name" href="light-name.html#Name" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="65" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Name()"/>
                <function threadsafety="unspecified" name="Name" fullname="Light::Name::Name" href="light-name.html#Name-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="66" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Name(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setName" fullname="Light::Name::setName" href="light-name.html#setName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="70" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setName(const QString name)">
                    <parameter left="const QString" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="getName" fullname="Light::Name::getName" href="light-name.html#getName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="68" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getName() const"/>
            </class>
            <class threadsafety="unspecified" name="ProductID" fullname="Light::ProductID" href="light-productid.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="176">
                <function threadsafety="unspecified" name="ProductID" fullname="Light::ProductID::ProductID" href="light-productid.html#ProductID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="179" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProductID()"/>
                <function threadsafety="unspecified" name="ProductID" fullname="Light::ProductID::ProductID" href="light-productid.html#ProductID-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="180" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProductID(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setProductID" fullname="Light::ProductID::setProductID" href="light-productid.html#setProductID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="184" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setProductID(const QString productID)">
                    <parameter left="const QString" right="" name="productID" default=""/>
                </function>
                <function threadsafety="unspecified" name="getProductID" fullname="Light::ProductID::getProductID" href="light-productid.html#getProductID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="182" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getProductID() const"/>
            </class>
            <class threadsafety="unspecified" name="ProductName" fullname="Light::ProductName" href="light-productname.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="148">
                <function threadsafety="unspecified" name="ProductName" fullname="Light::ProductName::ProductName" href="light-productname.html#ProductName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="151" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProductName()"/>
                <function threadsafety="unspecified" name="ProductName" fullname="Light::ProductName::ProductName" href="light-productname.html#ProductName-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="152" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProductName(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setProductName" fullname="Light::ProductName::setProductName" href="light-productname.html#setProductName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="156" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setProductName(const QString productName)">
                    <parameter left="const QString" right="" name="productName" default=""/>
                </function>
                <function threadsafety="unspecified" name="getProductName" fullname="Light::ProductName::getProductName" href="light-productname.html#getProductName" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="154" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getProductName() const"/>
            </class>
            <class threadsafety="unspecified" name="SoftwareConfigID" fullname="Light::SoftwareConfigID" href="light-softwareconfigid.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="134">
                <function threadsafety="unspecified" name="SoftwareConfigID" fullname="Light::SoftwareConfigID::SoftwareConfigID" href="light-softwareconfigid.html#SoftwareConfigID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SoftwareConfigID()"/>
                <function threadsafety="unspecified" name="SoftwareConfigID" fullname="Light::SoftwareConfigID::SoftwareConfigID" href="light-softwareconfigid.html#SoftwareConfigID-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="138" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SoftwareConfigID(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSoftwareConfigID" fullname="Light::SoftwareConfigID::setSoftwareConfigID" href="light-softwareconfigid.html#setSoftwareConfigID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSoftwareConfigID(const QString softwareConfigID)">
                    <parameter left="const QString" right="" name="softwareConfigID" default=""/>
                </function>
                <function threadsafety="unspecified" name="getSoftwareConfigID" fullname="Light::SoftwareConfigID::getSoftwareConfigID" href="light-softwareconfigid.html#getSoftwareConfigID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="140" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getSoftwareConfigID() const"/>
            </class>
            <class threadsafety="unspecified" name="SoftwareUpdate" fullname="Light::SoftwareUpdate" href="light-softwareupdate.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="116">
                <function threadsafety="unspecified" name="SoftwareUpdate" fullname="Light::SoftwareUpdate::SoftwareUpdate" href="light-softwareupdate.html#SoftwareUpdate" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="119" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SoftwareUpdate()"/>
                <function threadsafety="unspecified" name="SoftwareUpdate" fullname="Light::SoftwareUpdate::SoftwareUpdate" href="light-softwareupdate.html#SoftwareUpdate-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="120" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SoftwareUpdate(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setLastInstall" fullname="Light::SoftwareUpdate::setLastInstall" href="light-softwareupdate.html#setLastInstall" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLastInstall(const QString lastInstall)">
                    <parameter left="const QString" right="" name="lastInstall" default=""/>
                </function>
                <function threadsafety="unspecified" name="setState" fullname="Light::SoftwareUpdate::setState" href="light-softwareupdate.html#setState" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="125" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setState(const QString state)">
                    <parameter left="const QString" right="" name="state" default=""/>
                </function>
                <function threadsafety="unspecified" name="getLastInstall" fullname="Light::SoftwareUpdate::getLastInstall" href="light-softwareupdate.html#getLastInstall" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="123" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getLastInstall() const"/>
                <function threadsafety="unspecified" name="getState" fullname="Light::SoftwareUpdate::getState" href="light-softwareupdate.html#getState" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="122" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getState() const"/>
            </class>
            <class threadsafety="unspecified" name="SoftwareVersion" fullname="Light::SoftwareVersion" href="light-softwareversion.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="102">
                <function threadsafety="unspecified" name="SoftwareVersion" fullname="Light::SoftwareVersion::SoftwareVersion" href="light-softwareversion.html#SoftwareVersion" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="105" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SoftwareVersion()"/>
                <function threadsafety="unspecified" name="SoftwareVersion" fullname="Light::SoftwareVersion::SoftwareVersion" href="light-softwareversion.html#SoftwareVersion-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="106" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SoftwareVersion(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSoftwareVersion" fullname="Light::SoftwareVersion::setSoftwareVersion" href="light-softwareversion.html#setSoftwareVersion" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSoftwareVersion(const QString softwareVersion)">
                    <parameter left="const QString" right="" name="softwareVersion" default=""/>
                </function>
                <function threadsafety="unspecified" name="getSoftwareVersion" fullname="Light::SoftwareVersion::getSoftwareVersion" href="light-softwareversion.html#getSoftwareVersion" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="108" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getSoftwareVersion() const"/>
            </class>
            <class threadsafety="unspecified" name="State" fullname="Light::State" href="light-state.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="16">
                <function threadsafety="unspecified" name="State" fullname="Light::State::State" href="light-state.html#State" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="19" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="State()"/>
                <function threadsafety="unspecified" name="State" fullname="Light::State::State" href="light-state.html#State-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="20" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="State(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setAlert" fullname="Light::State::setAlert" href="light-state.html#setAlert" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAlert(const QString alert)">
                    <parameter left="const QString" right="" name="alert" default=""/>
                </function>
                <function threadsafety="unspecified" name="setBrightness" fullname="Light::State::setBrightness" href="light-state.html#setBrightness" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="37" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setBrightness(const int brightness)">
                    <parameter left="const int" right="" name="brightness" default=""/>
                </function>
                <function threadsafety="unspecified" name="setColorMode" fullname="Light::State::setColorMode" href="light-state.html#setColorMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setColorMode(const QString colorMode)">
                    <parameter left="const QString" right="" name="colorMode" default=""/>
                </function>
                <function threadsafety="unspecified" name="setColorTemp" fullname="Light::State::setColorTemp" href="light-state.html#setColorTemp" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setColorTemp(const int colorTemp)">
                    <parameter left="const int" right="" name="colorTemp" default=""/>
                </function>
                <function threadsafety="unspecified" name="setEffect" fullname="Light::State::setEffect" href="light-state.html#setEffect" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setEffect(const QString effect)">
                    <parameter left="const QString" right="" name="effect" default=""/>
                </function>
                <function threadsafety="unspecified" name="setHue" fullname="Light::State::setHue" href="light-state.html#setHue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setHue(const int hue)">
                    <parameter left="const int" right="" name="hue" default=""/>
                </function>
                <function threadsafety="unspecified" name="setMode" fullname="Light::State::setMode" href="light-state.html#setMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMode(const QString mode)">
                    <parameter left="const QString" right="" name="mode" default=""/>
                </function>
                <function threadsafety="unspecified" name="setOn" fullname="Light::State::setOn" href="light-state.html#setOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setOn(const bool on)">
                    <parameter left="const bool" right="" name="on" default=""/>
                </function>
                <function threadsafety="unspecified" name="setReachable" fullname="Light::State::setReachable" href="light-state.html#setReachable" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setReachable(const bool reachable)">
                    <parameter left="const bool" right="" name="reachable" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSaturation" fullname="Light::State::setSaturation" href="light-state.html#setSaturation" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="39" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSaturation(const int saturation)">
                    <parameter left="const int" right="" name="saturation" default=""/>
                </function>
                <function threadsafety="unspecified" name="setXValue" fullname="Light::State::setXValue" href="light-state.html#setXValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setXValue(const double xValue)">
                    <parameter left="const double" right="" name="xValue" default=""/>
                </function>
                <function threadsafety="unspecified" name="setYValue" fullname="Light::State::setYValue" href="light-state.html#setYValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setYValue(const double yValue)">
                    <parameter left="const double" right="" name="yValue" default=""/>
                </function>
                <function threadsafety="unspecified" name="getAlert" fullname="Light::State::getAlert" href="light-state.html#getAlert" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="31" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getAlert() const"/>
                <function threadsafety="unspecified" name="getColorMode" fullname="Light::State::getColorMode" href="light-state.html#getColorMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="32" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getColorMode() const"/>
                <function threadsafety="unspecified" name="getEffect" fullname="Light::State::getEffect" href="light-state.html#getEffect" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="30" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getEffect() const"/>
                <function threadsafety="unspecified" name="getMode" fullname="Light::State::getMode" href="light-state.html#getMode" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="33" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getMode() const"/>
                <function threadsafety="unspecified" name="isOn" fullname="Light::State::isOn" href="light-state.html#isOn" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isOn() const"/>
                <function threadsafety="unspecified" name="isReachable" fullname="Light::State::isReachable" href="light-state.html#isReachable" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isReachable() const"/>
                <function threadsafety="unspecified" name="getXValue" fullname="Light::State::getXValue" href="light-state.html#getXValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="28" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getXValue() const"/>
                <function threadsafety="unspecified" name="getYValue" fullname="Light::State::getYValue" href="light-state.html#getYValue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="29" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getYValue() const"/>
                <function threadsafety="unspecified" name="getBrightness" fullname="Light::State::getBrightness" href="light-state.html#getBrightness" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="24" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getBrightness() const"/>
                <function threadsafety="unspecified" name="getColorTemp" fullname="Light::State::getColorTemp" href="light-state.html#getColorTemp" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="27" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getColorTemp() const"/>
                <function threadsafety="unspecified" name="getHue" fullname="Light::State::getHue" href="light-state.html#getHue" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="25" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getHue() const"/>
                <function threadsafety="unspecified" name="getSaturation" fullname="Light::State::getSaturation" href="light-state.html#getSaturation" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="26" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getSaturation() const"/>
            </class>
            <class threadsafety="unspecified" name="Type" fullname="Light::Type" href="light-type.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="76">
                <function threadsafety="unspecified" name="Type" fullname="Light::Type::Type" href="light-type.html#Type" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="78" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Type()"/>
                <function threadsafety="unspecified" name="Type" fullname="Light::Type::Type" href="light-type.html#Type-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="79" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Type(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setType" fullname="Light::Type::setType" href="light-type.html#setType" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setType(const QString type)">
                    <parameter left="const QString" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="getType" fullname="Light::Type::getType" href="light-type.html#getType" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="81" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getType() const"/>
            </class>
            <class threadsafety="unspecified" name="UniqueID" fullname="Light::UniqueID" href="light-uniqueid.html" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="89">
                <function threadsafety="unspecified" name="UniqueID" fullname="Light::UniqueID::UniqueID" href="light-uniqueid.html#UniqueID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="91" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UniqueID()"/>
                <function threadsafety="unspecified" name="UniqueID" fullname="Light::UniqueID::UniqueID" href="light-uniqueid.html#UniqueID-1" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="92" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UniqueID(const QJsonValue json)">
                    <parameter left="const QJsonValue" right="" name="json" default=""/>
                </function>
                <function threadsafety="unspecified" name="setUniqueID" fullname="Light::UniqueID::setUniqueID" href="light-uniqueid.html#setUniqueID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setUniqueID(const QString uniqueID)">
                    <parameter left="const QString" right="" name="uniqueID" default=""/>
                </function>
                <function threadsafety="unspecified" name="getUniqueID" fullname="Light::UniqueID::getUniqueID" href="light-uniqueid.html#getUniqueID" status="active" access="public" location="huetypes.h" filepath="/home/erik/Dev/huelib/source/huetypes.h" lineno="94" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString getUniqueID() const"/>
            </class>
        </namespace>
        <group name="HueLib" href="huelib.html" status="active" seen="true" title="HueLib" members="HueBridge,HueError,HueGroup,HueLight,HueReply,HueRequest"/>
    </namespace>
</INDEX>
